"""Rebuild models to spec 6.2-6.3

Revision ID: 3dc59658d19b
Revises: 
Create Date: 2025-10-15 15:20:42.839226

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3dc59658d19b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('categories',
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('color_hex', sa.String(length=16), nullable=True),
    sa.Column('icon_key', sa.String(length=64), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint("type IN ('expense','income')", name='ck_category_type'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', 'type', name='uq_categories_user_name_type')
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_categories_user_id'), ['user_id'], unique=False)

    op.create_table('payment_methods',
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='uq_payment_methods_user_name')
    )
    with op.batch_alter_table('payment_methods', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_methods_user_id'), ['user_id'], unique=False)

    op.create_table('savings_goals',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('target_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('current_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint("status IN ('active','paused','completed')", name='ck_sg_status'),
    sa.CheckConstraint('current_amount >= 0', name='ck_sg_current_nonneg'),
    sa.CheckConstraint('target_amount > 0', name='ck_sg_target_pos'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('savings_goals', schema=None) as batch_op:
        batch_op.create_index('idx_savings_status', ['status'], unique=False)
        batch_op.create_index('idx_savings_user', ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_savings_goals_user_id'), ['user_id'], unique=False)

    op.create_table('budgets',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('period_year', sa.Integer(), nullable=False),
    sa.Column('period_month', sa.Integer(), nullable=False),
    sa.Column('limit_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('limit_amount > 0', name='ck_budget_limit_pos'),
    sa.CheckConstraint('period_month BETWEEN 1 AND 12', name='ck_budget_month_1_12'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'category_id', 'period_year', 'period_month', name='uq_budget_user_cat_year_month')
    )
    with op.batch_alter_table('budgets', schema=None) as batch_op:
        batch_op.create_index('idx_budgets_user_period', ['user_id', 'period_year', 'period_month'], unique=False)
        batch_op.create_index(batch_op.f('ix_budgets_category_id'), ['category_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_budgets_user_id'), ['user_id'], unique=False)

    op.create_table('expenses',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('payment_method_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('spent_at', sa.Date(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('amount > 0', name='ck_expense_amount_pos'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['payment_method_id'], ['payment_methods.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.create_index('idx_expenses_user_category', ['user_id', 'category_id'], unique=False)
        batch_op.create_index('idx_expenses_user_spent', ['user_id', 'spent_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_expenses_category_id'), ['category_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expenses_payment_method_id'), ['payment_method_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expenses_spent_at'), ['spent_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_expenses_user_id'), ['user_id'], unique=False)

    op.create_table('incomes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('received_at', sa.Date(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('amount > 0', name='ck_income_amount_pos'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('incomes', schema=None) as batch_op:
        batch_op.create_index('idx_incomes_user_date', ['user_id', 'received_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_incomes_category_id'), ['category_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_incomes_received_at'), ['received_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_incomes_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('incomes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_incomes_user_id'))
        batch_op.drop_index(batch_op.f('ix_incomes_received_at'))
        batch_op.drop_index(batch_op.f('ix_incomes_category_id'))
        batch_op.drop_index('idx_incomes_user_date')

    op.drop_table('incomes')
    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expenses_user_id'))
        batch_op.drop_index(batch_op.f('ix_expenses_spent_at'))
        batch_op.drop_index(batch_op.f('ix_expenses_payment_method_id'))
        batch_op.drop_index(batch_op.f('ix_expenses_category_id'))
        batch_op.drop_index('idx_expenses_user_spent')
        batch_op.drop_index('idx_expenses_user_category')

    op.drop_table('expenses')
    with op.batch_alter_table('budgets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_budgets_user_id'))
        batch_op.drop_index(batch_op.f('ix_budgets_category_id'))
        batch_op.drop_index('idx_budgets_user_period')

    op.drop_table('budgets')
    with op.batch_alter_table('savings_goals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_savings_goals_user_id'))
        batch_op.drop_index('idx_savings_user')
        batch_op.drop_index('idx_savings_status')

    op.drop_table('savings_goals')
    with op.batch_alter_table('payment_methods', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_methods_user_id'))

    op.drop_table('payment_methods')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categories_user_id'))

    op.drop_table('categories')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
